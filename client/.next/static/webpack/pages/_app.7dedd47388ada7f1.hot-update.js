"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./utils/api.ts":
/*!**********************!*\
  !*** ./utils/api.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: function() { return /* binding */ api; },\n/* harmony export */   chatAPI: function() { return /* binding */ chatAPI; },\n/* harmony export */   importAPI: function() { return /* binding */ importAPI; },\n/* harmony export */   inventoryAPI: function() { return /* binding */ inventoryAPI; },\n/* harmony export */   laborRulesAPI: function() { return /* binding */ laborRulesAPI; },\n/* harmony export */   propertiesAPI: function() { return /* binding */ propertiesAPI; },\n/* harmony export */   roomsAPI: function() { return /* binding */ roomsAPI; },\n/* harmony export */   unionsAPI: function() { return /* binding */ unionsAPI; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || ( false ? 0 : \"http://localhost:3001\");\n// Create axios instance with default config\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: \"\".concat(BASE_URL, \"/api\"),\n    timeout: 30000,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n// Request interceptor to add property ID to requests\napi.interceptors.request.use((config)=>{\n    // Add property ID to requests that need it (only on client side)\n    if (true) {\n        const propertyId = localStorage.getItem(\"selectedPropertyId\");\n        if (propertyId && config.method === \"get\" && config.url) {\n            const url = new URL(config.url, config.baseURL);\n            if (!url.searchParams.has(\"property_id\") && (config.url.includes(\"/inventory\") || config.url.includes(\"/rooms\") || config.url.includes(\"/labor-rules\"))) {\n                url.searchParams.set(\"property_id\", propertyId);\n                config.url = url.pathname + url.search;\n            }\n        }\n    }\n    return config;\n}, (error)=>{\n    return Promise.reject(error);\n});\n// Response interceptor for error handling\napi.interceptors.response.use((response)=>response, (error)=>{\n    var _error_response;\n    console.error(\"API Error:\", ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.data) || error.message);\n    return Promise.reject(error);\n});\n// API methods\nconst chatAPI = {\n    sendMessage: (messages, propertyId)=>{\n        return api.post(\"/chat\", {\n            messages,\n            propertyId\n        });\n    },\n    sendMessageWithFile: (formData)=>{\n        return api.post(\"/chat\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n    },\n    health: ()=>api.get(\"/health\")\n};\nconst propertiesAPI = {\n    getAll: ()=>api.get(\"/properties\"),\n    getById: (id)=>api.get(\"/properties/\".concat(id)),\n    create: (data)=>api.post(\"/properties\", data),\n    update: (id, data)=>api.put(\"/properties/\".concat(id), data),\n    delete: (id)=>api.delete(\"/properties/\".concat(id))\n};\nconst roomsAPI = {\n    getAll: (propertyId)=>api.get(\"/rooms?property_id=\".concat(propertyId)),\n    getById: (id)=>api.get(\"/rooms/\".concat(id)),\n    create: (data)=>api.post(\"/rooms\", data),\n    update: (id, data)=>api.put(\"/rooms/\".concat(id), data),\n    delete: (id)=>api.delete(\"/rooms/\".concat(id))\n};\nconst inventoryAPI = {\n    getAll: (propertyId)=>api.get(\"/inventory?property_id=\".concat(propertyId)),\n    getById: (id)=>api.get(\"/inventory/\".concat(id)),\n    create: (data)=>api.post(\"/inventory\", data),\n    update: (id, data)=>api.put(\"/inventory/\".concat(id), data),\n    delete: (id)=>api.delete(\"/inventory/\".concat(id))\n};\nconst laborRulesAPI = {\n    getAll: (propertyId)=>api.get(\"/labor-rules?property_id=\".concat(propertyId)),\n    getById: (id)=>api.get(\"/labor-rules/\".concat(id)),\n    create: (data)=>api.post(\"/labor-rules\", data),\n    update: (id, data)=>api.put(\"/labor-rules/\".concat(id), data),\n    delete: (id)=>api.delete(\"/labor-rules/\".concat(id))\n};\nconst unionsAPI = {\n    getAll: (propertyId)=>api.get(\"/unions?property_id=\".concat(propertyId)),\n    getById: (id)=>api.get(\"/unions/\".concat(id)),\n    create: (data)=>api.post(\"/unions\", data),\n    update: (id, data)=>api.put(\"/unions/\".concat(id), data),\n    delete: (id)=>api.delete(\"/unions/\".concat(id))\n};\nconst importAPI = {\n    uploadInventory: function(propertyId, file) {\n        let replaceExisting = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"property_id\", propertyId.toString());\n        formData.append(\"replace_existing\", replaceExisting.toString());\n        return api.post(\"/import/inventory\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            },\n            timeout: 60000\n        });\n    },\n    uploadRooms: (propertyId, file)=>{\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"property_id\", propertyId.toString());\n        return api.post(\"/import/rooms\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n    },\n    uploadLaborRules: (propertyId, file)=>{\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"property_id\", propertyId.toString());\n        return api.post(\"/import/labor\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n    },\n    downloadTemplate: ()=>{\n        return api.get(\"/import/template\", {\n            responseType: \"blob\"\n        });\n    },\n    exportData: (propertyId)=>{\n        return api.get(\"/import/export?property_id=\".concat(propertyId), {\n            responseType: \"blob\"\n        });\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (api);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/api.ts\n"));

/***/ })

});